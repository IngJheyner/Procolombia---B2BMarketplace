<?php

/**
 * @file
 * Functions to support theming in the SASS Starterkit subtheme.
 */

use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_system_theme_settings_alter() for settings form.
 *
 * Replace Barrio setting options with subtheme ones.
 */
function matchmaking_pro_form_system_theme_settings_alter(&$form, FormStateInterface $form_state) {
  $form['components']['navbar']['bootstrap_barrio_navbar_top_background']['#options'] = array(
    'bg-primary' => t('Primary'),
    'bg-secondary' => t('Secondary'),
    'bg-light' => t('Light'),
    'bg-dark' => t('Dark'),
    'bg-white' => t('White'),
    'bg-transparent' => t('Transparent'),
  );
  $form['components']['navbar']['bootstrap_barrio_navbar_background']['#options'] = array(
    'bg-primary' => t('Primary'),
    'bg-secondary' => t('Secondary'),
    'bg-light' => t('Light'),
    'bg-dark' => t('Dark'),
    'bg-white' => t('White'),
    'bg-transparent' => t('Transparent'),
  );
}

function matchmaking_pro_page_attachments(&$variables) {
  $variables['#attached']['library'][] = 'matchmaking_pro/bootstrap';
  $variables['#attached']['library'][] = 'matchmaking_pro/bootstrap_cdn';
}

/**
 * Implements hook_preprocess_HOOK().
 */
function matchmaking_pro_preprocess_page(array &$variables) {
  $uid = \Drupal::currentUser();
  $user = \Drupal\user\Entity\User::load($uid->id());
  $language = \Drupal::languageManager()->getCurrentLanguage()->getId();
  

  //force language in all paths
  $variables['language'] = $language == 'en' ? 'English' : 'Espanish';
  $variables['language_2'] = $language != 'en' ? 'English' : 'Espanish';
  //ceck if user is not deleted in drupal

  if($user->isActive()){

    //check if has exporter rol
    // chek if user is not root
    if($user->hasRole('exportador')){
      //is not empty field_company_name
      if(!empty($user->get('field_company_name')->value)){
        $variables['business_name'] = $user->get('field_company_name')->value;
        $variables['company_logo'] = file_create_url($user->get('field_company_logo')->entity->getFileUri());
      }
      else{
        $variables['company_logo'] = '';
        $variables['business_name'] = '';
      }
    }

    if($user->hasRole('buyer')){
      //is not empty field_company_name
      $variables['name'] = $user->get('field_company_contact_name')->value;
      $variables['lastname'] = $user->get('field_company_contact_lastname')->value;
      //get email
      $variables['email'] = $user->get('mail')->value;
    }
  }
}

/**
 * Implements hook_preprocess_HOOK().
 *
 * @param [type] $variables
 * @return void
 */
function matchmaking_pro_preprocess_views_view_table(&$variables) {
  $view = $variables['view'];
  if ($view->id() == 'paises') {
    $variables['table_class'] = '';
  }
}

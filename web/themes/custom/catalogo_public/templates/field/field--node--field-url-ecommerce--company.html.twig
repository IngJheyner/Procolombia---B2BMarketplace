{#
/**
 * @file
 * Theme override for a field.
 *
 * To override output, copy the "field.html.twig" from the templates directory
 * to your theme's directory and customize it, just like customizing other
 * Drupal templates such as page.html.twig or node.html.twig.
 *
 * Instead of overriding the theming for all fields, you can also just override
 * theming for a subset of fields using
 * @link themeable Theme hook suggestions. @endlink For example,
 * here are some theme hook suggestions that can be used for a field_foo field
 * on an article node type:
 * - field--node--field-foo--article.html.twig
 * - field--node--field-foo.html.twig
 * - field--node--article.html.twig
 * - field--field-foo.html.twig
 * - field--text-with-summary.html.twig
 * - field.html.twig
 *
 * Available variables:
 * - attributes: HTML attributes for the containing element.
 * - label_hidden: Whether to show the field label or not.
 * - title_attributes: HTML attributes for the title.
 * - label: The label for the field.
 * - multiple: TRUE if a field can contain multiple items.
 * - items: List of all the field items. Each item contains:
 *   - attributes: List of HTML attributes for each item.
 *   - content: The field item's content.
 * - entity_type: The entity type to which the field belongs.
 * - field_name: The name of the field.
 * - field_type: The type of the field.
 * - label_display: The display settings for the label.
 *
 *
 * @see template_preprocess_field()
 */
#}
{%
  set classes = [
    'field',
    'class1',
    'field--name-' ~ field_name|clean_class,
    'field--type-' ~ field_type|clean_class,
    'field--label-' ~ label_display,
  ]
%}
{%
  set title_classes = [
    'field__label',
    label_display == 'visually_hidden' ? 'visually-hidden',
  ]
%}
{% if label_hidden %}
  {% if multiple %}
    <div{{ attributes.addClass(classes, 'field__items') }}>
      {% for item in items %}
        <div{{ item.attributes.addClass('field__item') }}>{{ item.content }}</div>
      {% endfor %}
    </div>
  {% else %}
    {% for item in items %}
      <div{{ attributes.addClass(classes, 'field__item') }}>
        <div class="btn-ecommerce" >
          <a href="{{ item.content }}" target="_blank" class="link-ecommerce btn btn-primary btn-primary">
            {{ 'Buy now'|t }}
            <svg xmlns="http://www.w3.org/2000/svg" class="hand-finger-up" viewBox="0 0 20.973 24.923" x="0px" y="0px">
              <path id="cursor" d="M42.6,24.923c.449-1.448,1.911-6.49,1.911-8.349V10.121a1.557,1.557,0,1,0-3.114,0v2.752a.293.293,0,1,1-.586,0v-4.3a1.557,1.557,0,1,0-3.114,0v3.066a.293.293,0,1,1-.586,0v-4.3a1.557,1.557,0,1,0-3.114,0v3.066a.293.293,0,0,1-.586,0V1.577a1.557,1.557,0,1,0-3.114,0V15.248a.293.293,0,0,1-.514.193l-3.647-4.172-.043-.044a1.578,1.578,0,0,0-1.079-.432H25a1.556,1.556,0,0,0-1.093.45c-.359.359-.641,1.046.06,2.279,1.064,1.869,2.228,3.642,3.258,5.213.766,1.168,1.49,2.271,2.03,3.2.345.6,1.065,2.159,1.463,2.987H42.6Z" transform="translate(-23.539)" fill="#fff"/>
            </svg>
          </a>
        </div>
      </div>
    {% endfor %}
  {% endif %}
{% else %}
  <div{{ attributes.addClass(classes) }}>
    <div{{ title_attributes.addClass(title_classes) }}>{{ label }}</div>
    {% if multiple %}
      <div class='field__items'>
    {% endif %}
    {% for item in items %}
      <div{{ item.attributes.addClass('field__item') }}>{{ item.content }}</div>
    {% endfor %}
    {% if multiple %}
      </div>
    {% endif %}
  </div>
{% endif %}
